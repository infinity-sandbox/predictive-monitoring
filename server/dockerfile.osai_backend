# syntax=docker/dockerfile:1

# Use the specified Python version
ARG PYTHON_VERSION=3.10.8
FROM python:${PYTHON_VERSION}-slim as base

# Install build dependencies including pkg-config and libhdf5-dev for h5py
RUN apt-get update && \
    apt-get install -y gcc python3-dev pkg-config libhdf5-dev default-libmysqlclient-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Prevents Python from writing pyc files.
ENV PYTHONDONTWRITEBYTECODE=1

# Keeps Python from buffering stdout and stderr to avoid situations where
# the application crashes without emitting any logs due to buffering.
ENV PYTHONUNBUFFERED=1

# Set the working directory
WORKDIR /backend

# Create a non-privileged user that the app will run under.
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/home/appuser" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser

# Change ownership of the /backend directory and its subdirectories to appuser
RUN chown -R appuser:appuser /backend

# Copy the dependencies file to the working directory
COPY ./server/requirements.txt /backend/
COPY ./server/setup.py /backend/
COPY ./server/readme.rst /backend/
COPY ./server/ /backend/

# Upgrade pip
RUN pip install --upgrade pip

# Install the project as a package
RUN pip install -e .

# Uncomment this one if you want to use caching
# COPY ./server/ /backend/

# Change ownership of the /backend directory and its subdirectories to appuser
RUN chown -R appuser:appuser /backend/logs

# Switch to the non-privileged user to run the application.
USER appuser

# Define environment variables
ENV HOST="0.0.0.0"
ENV PORT=8000

# Expose the specified port
EXPOSE ${PORT}

# Set the entry point for the container
ENTRYPOINT uvicorn app.app:app --host ${HOST} --port ${PORT}
